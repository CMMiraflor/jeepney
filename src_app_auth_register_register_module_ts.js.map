{"version":3,"sources":["./node_modules/rxjs/_esm2015/internal/observable/throwError.js","./src/app/auth/register/register-routing.module.ts","./src/app/auth/register/register.module.ts","./src/app/auth/register/register.page.ts","./src/services/register.service.ts","./src/app/auth/register/register.page.scss","./src/app/auth/register/register.page.html"],"names":[],"mappings":";;;;;;;;;;;;;;AAA2C;AACpC;AACP;AACA,mBAAmB,mDAAU;AAC7B;AACA;AACA,mBAAmB,mDAAU,gDAAgD,oBAAoB;AACjG;AACA;AACA,mBAAmB,oBAAoB;AACvC;AACA;AACA,sC;;;;;;;;;;;;;;;;;;;;ACZyC;AACc;AAER;AAE/C,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,wDAAY;KACxB;CACF,CAAC;IAMW,yBAAyB,SAAzB,yBAAyB;CAAG;AAA5B,yBAAyB;IAJrC,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,yDAAY,CAAC;KACxB,CAAC;GACW,yBAAyB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;AChBG;AACM;AACF;AAEA;AAEyB;AAEvB;IAWlC,kBAAkB,SAAlB,kBAAkB;CAAG;AAArB,kBAAkB;IAT9B,uDAAQ,CAAC;QACR,OAAO,EAAE;YACP,yDAAY;YACZ,uDAAW;YACX,uDAAW;YACX,+EAAyB;SAC1B;QACD,YAAY,EAAE,CAAC,wDAAY,CAAC;KAC7B,CAAC;GACW,kBAAkB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnBmB;AACT;AACL;AAGiC;AACN;IAUlD,YAAY,SAAZ,YAAY;IAevB,YACU,MAAc,EACd,YAA0B,EAC1B,eAAgC;QAFhC,WAAM,GAAN,MAAM,CAAQ;QACd,iBAAY,GAAZ,YAAY,CAAc;QAC1B,oBAAe,GAAf,eAAe,CAAiB;QAjBlC,0BAAqB,GAAiB,IAAI,8CAAY,EAAE,CAAC;QAGjE,aAAQ,GAAkB;YACxB,IAAI,EAAE,IAAI;YACV,WAAW,EAAE,IAAI;YACjB,SAAS,EAAE,IAAI;YACf,YAAY,EAAE,IAAI;YAClB,OAAO,EAAE,IAAI;YACb,QAAQ,EAAE,IAAI;SACf,CAAC;IAQE,CAAC;IAEL,QAAQ;IAER,CAAC;IACD,QAAQ,CAAC,IAAY;QACnB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACvB,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAC5B,IAAI,CAAC,eAAe,CAAC,QAAQ,CAC3B,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,EAC5B,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EACpB,IAAI,CAAC,WAAW,EAChB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EACvB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,EACxB,IAAI,CAAC,SAAS,CACb;aACF,SAAS,CACR,MAAM,CAAC,EAAE;YACP,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACpB,IAAG,MAAM,CAAC,MAAM,IAAI,SAAS,EAAC;gBAC5B,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,SAAS,EAAE,yBAAyB,EAAE,EAAE,CAAC,CAAC;gBAC3E,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;aACjC;iBACG;gBACF,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,OAAO,EAAE,KAAK,EAAE,wCAAwC,CAAC,CAAC;aACzF;QACH,CAAC,EACD,KAAK,CAAC,EAAE;YACN,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,OAAO,EAAE,KAAK,EAAE,wCAAwC,CAAC,CAAC;QAC1F,CAAC,CACF,CACF,CAAC;QACF,mCAAmC;QACnC,YAAY;IAEd,CAAC;CAEF;;YAvEQ,mDAAM;YAKN,iEAAY;YADZ,uEAAe;;AAWX,YAAY;IALxB,wDAAS,CAAC;QACT,QAAQ,EAAE,cAAc;QACxB,6EAAmC;;KAEpC,CAAC;GACW,YAAY,CAwDxB;AAxDwB;;;;;;;;;;;;;;;;;;;;;;;AChBkB;AAC0B;AACvB;AACF;AACD;IAM9B,eAAe,SAAf,eAAe;IAG1B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAF5B,QAAG,GAAG,gEAA2B,CAAC;IAEF,CAAC;IAGlC,QAAQ,CACb,KAAa,EACb,IAAY,EACZ,YAAoB,EACpB,OAAe,EACf,QAAgB,EAChB,SAAiB;QAEjB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;QAClB,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC;QACzB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,cAAc,CAAC,EAAG;YACzD,KAAK,EAAE,KAAK;YACZ,IAAI,EAAE,IAAI;YACV,YAAY,EAAE,YAAY;YAC1B,OAAO,EAAE,OAAO;YAChB,QAAQ,EAAE,QAAQ;YAClB,SAAS,EAAE,SAAS;YACtB,eAAe,EAAE,IAAI;SACtB,CAAC,CAAC,IAAI,CACL,0DAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAC7B,CAAC;IACJ,CAAC;IAEO,WAAW,CAAC,GAAsB;QACxC,IAAI,YAAY,GAAG,EAAE,CAAC;QACtB,IAAI,GAAG,CAAC,KAAK,YAAY,UAAU,EAAE;YACnC,YAAY,GAAG,sBAAsB,GAAG,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;SAC1D;aAAM;YACL,YAAY,GAAG,yBAAyB,GAAG,CAAC,MAAM,uBAAuB,GAAG,CAAC,OAAO,EAAE,CAAC;SACxF;QACD,OAAO,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;QAC5B,OAAO,gDAAU,CAAC,YAAY,CAAC,CAAC;IAClC,CAAC;CACF;;YAhDQ,4DAAU;;AASN,eAAe;IAH3B,yDAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,eAAe,CAuC3B;AAvC2B;;;;;;;;;;;;;;;;ACV5B,iEAAe,YAAY,qBAAqB,uBAAuB,GAAG,cAAc,qBAAqB,GAAG,cAAc,qBAAqB,GAAG,eAAe,uBAAuB,GAAG,6CAA6C,2jBAA2jB,E;;;;;;;;;;;;;;;ACAvyB,iEAAe,y2BAAy2B,kBAAkB,0WAA0W,gBAAgB,oeAAoe,kBAAkB,mZAAmZ,gBAAgB,+dAA+d,kBAAkB,okBAAokB,kBAAkB,4kBAA4kB,kBAAkB,gwBAAgwB,kBAAkB,8wBAA8wB,kBAAkB,29BAA29B,E","file":"src_app_auth_register_register_module_ts.js","sourcesContent":["import { Observable } from '../Observable';\nexport function throwError(error, scheduler) {\n    if (!scheduler) {\n        return new Observable(subscriber => subscriber.error(error));\n    }\n    else {\n        return new Observable(subscriber => scheduler.schedule(dispatch, 0, { error, subscriber }));\n    }\n}\nfunction dispatch({ error, subscriber }) {\n    subscriber.error(error);\n}\n//# sourceMappingURL=throwError.js.map","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { RegisterPage } from './register.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: RegisterPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class RegisterPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { RegisterPageRoutingModule } from './register-routing.module';\r\n\r\nimport { RegisterPage } from './register.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RegisterPageRoutingModule\r\n  ],\r\n  declarations: [RegisterPage]\r\n})\r\nexport class RegisterPageModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { IRegistration } from './userRegister';\r\n\r\nimport { RegisterService } from '../../../services/register.service';\r\nimport { AlertService } from '../../../services/alert.service';\r\n\r\nimport { FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\r\n\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.page.html',\r\n  styleUrls: ['./register.page.scss'],\r\n})\r\nexport class RegisterPage implements OnInit {\r\n  private subscription_register: Subscription = new Subscription();\r\n  cpassword: string;\r\n\r\n  register: IRegistration = {\r\n    name: null,\r\n    accountType: null,\r\n    isStudent: null,\r\n    emailAddress: null,\r\n    address: null,\r\n    password: null,\r\n  };\r\naccountType: any;\r\nisStudent: any;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private alertService: AlertService,\r\n    private registerService: RegisterService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n  onSubmit(data: NgForm){\r\n    console.log(data.form);\r\n    this.subscription_register.add(\r\n      this.registerService.register(\r\n        data.form.value.emailAddress,\r\n        data.form.value.name,\r\n        this.accountType,\r\n        data.form.value.address,\r\n        data.form.value.password,\r\n        this.isStudent\r\n        )\r\n      .subscribe(\r\n        result => {\r\n          console.log(result);\r\n          if(result.status == 'Success'){\r\n            this.alertService.alertWithTimer('success', 'Registration Successful', '');\r\n            this.router.navigate(['login']);\r\n          }\r\n          else{\r\n            this.alertService.simpleAlert('error', ': (', 'Something went wrong, please try again');\r\n          }\r\n        },\r\n        error => {\r\n          this.alertService.simpleAlert('error', ': (', 'Something went wrong, please try again');\r\n        }\r\n      )\r\n    );\r\n    // this.router.navigate(['login']);\r\n    // return 0;\r\n\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { GlobalVariable } from '../server';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RegisterService {\r\n  private url = GlobalVariable.BASE_API_URL;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n\r\n  public register(\r\n    email: string,\r\n    name: string,\r\n    account_type: number,\r\n    address: string,\r\n    password: string,\r\n    isStudent: number\r\n    ): Observable<any> {\r\n    console.log(email)\r\n    console.log(account_type)\r\n    return this.http.post<any>(this.url.concat('api/register'),  {\r\n        email: email,\r\n        name: name,\r\n        account_type: account_type,\r\n        address: address,\r\n        password: password,\r\n        isStudent: isStudent,\r\n      withCredentials: true\r\n    }).pipe(\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  private handleError(err: HttpErrorResponse) {\r\n    let errorMessage = '';\r\n    if (err.error instanceof ErrorEvent) {\r\n      errorMessage = `An error occurred: ${err.error.message}`;\r\n    } else {\r\n      errorMessage = `Server returned code: ${err.status}, error message is: ${err.message}`;\r\n    }\r\n    console.error(errorMessage);\r\n    return throwError(errorMessage);\r\n  }\r\n}\r\n","export default \"#section1 {\\n  margin-top: 20px;\\n  text-align: center;\\n}\\n\\n.buttons {\\n  margin-top: 20px;\\n}\\n\\nion-item {\\n  margin-top: 10px;\\n}\\n\\n#section3 {\\n  text-align: center;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlZ2lzdGVyLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGdCQUFBO0VBQ0Esa0JBQUE7QUFDRjs7QUFDQTtFQUNFLGdCQUFBO0FBRUY7O0FBQUE7RUFDRSxnQkFBQTtBQUdGOztBQUFBO0VBQ0Usa0JBQUE7QUFHRiIsImZpbGUiOiJyZWdpc3Rlci5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIjc2VjdGlvbjEge1xyXG4gIG1hcmdpbi10b3A6IDIwcHg7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcbi5idXR0b25zIHtcclxuICBtYXJnaW4tdG9wOiAyMHB4O1xyXG59XHJcbmlvbi1pdGVtIHtcclxuICBtYXJnaW4tdG9wOiAxMHB4O1xyXG59XHJcblxyXG4jc2VjdGlvbjMge1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG4iXX0= */\";","export default \"<!-- Contents -->\\r\\n<ion-content id=\\\"signin\\\" fullscreen>\\r\\n\\r\\n  <!-- Any Image -->\\r\\n  <div id=\\\"section1\\\">\\r\\n      <img src=\\\"../../../assets/img/logo.png\\\" />\\r\\n  </div>\\r\\n  <form #form=\\\"ngForm\\\" class=\\\"ion-padding\\\" >\\r\\n    <ion-grid>\\r\\n        <ion-row color=\\\"primary\\\" class=\\\"ion-align-items-center ion-justify-content-center\\\">\\r\\n            <ion-col class=\\\"ion-align-self-center\\\" size-md=\\\"6\\\" size-lg=\\\"5\\\" size-xs=\\\"12\\\">\\r\\n\\r\\n            <ion-item>\\r\\n                <ion-label>\\r\\n                    <ion-icon md=\\\"person\\\" ios=\\\"person\\\" color=\\\"color1\\\"></ion-icon>\\r\\n                </ion-label>\\r\\n                <ion-input type=\\\"name\\\" placeholder=\\\"Name\\\" name=\\\"name\\\" [(ngModel)]=\\\"register.name\\\" required #nameField=\\\"ngModel\\\"></ion-input>\\r\\n            </ion-item>\\r\\n\\r\\n\\r\\n\\r\\n            <div style=\\\"margin-top: 20px; margin-top: 10px;\\\" [hidden]=\\\"nameField.valid || nameField.untouched\\\">\\r\\n              <ion-text class=\\\"warning\\\" color=\\\"danger\\\">Enter Valid Name</ion-text>\\r\\n            </div>\\r\\n\\r\\n            <ion-item>\\r\\n              <ion-label>\\r\\n                <ion-icon md=\\\"person\\\" ios=\\\"person\\\" color=\\\"color1\\\"></ion-icon>\\r\\n                   <span style=\\\"color: gray; margin: 0.25em;\\\"> Account Type </span>\\r\\n              </ion-label>\\r\\n\\r\\n              <ion-select interface=\\\"alert\\\"placeholder=\\\"Select One\\\" name=\\\"accountType\\\" [(ngModel)]=\\\"accountType\\\" required #accountTypeField=\\\"ngModel\\\">\\r\\n                <ion-select-option value=\\\"3\\\">User 👤</ion-select-option>\\r\\n                <ion-select-option value=\\\"2\\\">Driver 🚗</ion-select-option>\\r\\n              </ion-select>\\r\\n            </ion-item>\\r\\n            <div style=\\\"margin-top: 20px; margin-top: 10px;\\\" [hidden]=\\\"accountTypeField.valid|| accountTypeField.untouched\\\">\\r\\n              <ion-text class=\\\"warning\\\" color=\\\"danger\\\">Select Account type</ion-text>\\r\\n             </div>\\r\\n\\r\\n            <ion-item *ngIf=\\\"accountType == 3\\\">\\r\\n              <ion-label>\\r\\n                <ion-icon md=\\\"person\\\" ios=\\\"person\\\" color=\\\"color1\\\"></ion-icon>\\r\\n                <span style=\\\"color: gray; margin: 0.25em;\\\">User Type </span>\\r\\n              </ion-label>\\r\\n\\r\\n              <ion-select interface=\\\"alert\\\" placeholder=\\\"Select One\\\" name=\\\"isStudent\\\" [(ngModel)]=\\\"isStudent\\\" required #isStudentField=\\\"ngModel\\\">\\r\\n                <ion-select-option value=\\\"1\\\">Student 📚</ion-select-option>\\r\\n                <ion-select-option value=\\\"0\\\">Regular 👤</ion-select-option>\\r\\n              </ion-select>\\r\\n            </ion-item>\\r\\n            <div style=\\\"margin-top: 20px; margin-top: 10px;\\\" [hidden]=\\\"isStudentField.valid|| isStudentField.untouched\\\">\\r\\n              <ion-text class=\\\"warning\\\" color=\\\"danger\\\">Select Account type</ion-text>\\r\\n            </div>\\r\\n\\r\\n\\r\\n            <ion-item>\\r\\n              <ion-label>\\r\\n                <ion-icon name=\\\"navigate-circle\\\"></ion-icon>\\r\\n              </ion-label>\\r\\n              <ion-input type=\\\"address\\\" placeholder=\\\"Address\\\" name=\\\"address\\\" [(ngModel)]=\\\"register.address\\\" required #addressField=\\\"ngModel\\\"></ion-input>\\r\\n           </ion-item>\\r\\n\\r\\n           <div style=\\\"margin-top: 20px; margin-top: 10px;\\\" [hidden]=\\\"addressField.valid|| addressField.untouched\\\">\\r\\n            <ion-text class=\\\"warning\\\" color=\\\"danger\\\">Enter Valid Address</ion-text>\\r\\n           </div>\\r\\n\\r\\n          <ion-item>\\r\\n              <ion-label>\\r\\n                  <ion-icon md=\\\"mail\\\" ios=\\\"mail\\\" color=\\\"color1\\\"></ion-icon>\\r\\n              </ion-label>\\r\\n              <ion-input type=\\\"email\\\" placeholder=\\\"Email\\\" name=\\\"emailAddress\\\" [(ngModel)]=\\\"register.emailAddress\\\" required #emailField=\\\"ngModel\\\"></ion-input>\\r\\n          </ion-item>\\r\\n\\r\\n          <div style=\\\"margin-top: 20px; margin-top: 10px;\\\" [hidden]=\\\"emailField.valid||emailField.untouched\\\">\\r\\n            <ion-text class=\\\"warning\\\" color=\\\"danger\\\" *ngIf=\\\"emailField.errors?.required\\\">Enter Valid Email Address</ion-text>\\r\\n            <ion-text class=\\\"warning\\\" color=\\\"danger\\\" *ngIf=\\\"emailField.errors?.value\\\">Enter Valid Email Address</ion-text>\\r\\n           </div>\\r\\n\\r\\n            <ion-item>\\r\\n              <ion-label>\\r\\n                <ion-icon name=\\\"lock-closed\\\"></ion-icon>\\r\\n              </ion-label>\\r\\n              <ion-input type=\\\"password\\\" placeholder=\\\"Password\\\" name=\\\"password\\\" [(ngModel)]=\\\"register.password\\\" required  minlength=\\\"6\\\" #passwordField=\\\"ngModel\\\"></ion-input>\\r\\n            </ion-item>\\r\\n\\r\\n\\r\\n\\r\\n            <div style=\\\"margin-top: 20px; margin-top: 10px;\\\" [hidden]=\\\"passwordField.valid || passwordField.untouched\\\">\\r\\n              <ion-text class=\\\"warning\\\" color=\\\"danger\\\" *ngIf=\\\"passwordField.errors?.minlength\\\">Password must be 6 character or longer</ion-text>\\r\\n              <ion-text class=\\\"warning\\\" color=\\\"danger\\\" *ngIf=\\\"passwordField.errors?.required\\\">Enter Valid Password</ion-text>\\r\\n            </div>\\r\\n\\r\\n            <ion-item>\\r\\n              <ion-label>\\r\\n                <ion-icon name=\\\"lock-closed\\\"></ion-icon>\\r\\n                  </ion-label>\\r\\n                <ion-input type=\\\"password\\\" placeholder=\\\"Confirm Password\\\" name=\\\"cpassword\\\" [(ngModel)]=\\\"cpassword\\\" required #cpasswordField=\\\"ngModel\\\"></ion-input>\\r\\n            </ion-item>\\r\\n\\r\\n            <div style=\\\"margin-top: 20px; margin-top: 10px;\\\" [hidden]=\\\"passwordField.value===cpasswordField.value || cpasswordField.untouched\\\">\\r\\n              <ion-text class=\\\"warning\\\" color=\\\"danger\\\">Password does not match</ion-text>\\r\\n             </div>\\r\\n\\r\\n                <div class=\\\"buttons\\\" >\\r\\n                  <!-- Sign Button -->\\r\\n                  <ion-button color=\\\"warning\\\" expand=\\\"block\\\" [disabled]=\\\"!form.valid || !(passwordField.value===cpasswordField.value)\\\" (click)=\\\"onSubmit(form)\\\">\\r\\n                      <ion-text class=\\\"primary\\\"><strong>Register</strong></ion-text>\\r\\n                  </ion-button>\\r\\n              </div>\\r\\n\\r\\n            </ion-col>\\r\\n        </ion-row>\\r\\n    </ion-grid>\\r\\n</form>\\r\\n <!-- SignUp Buttons -->\\r\\n <br/>\\r\\n <div id=\\\"section3\\\">\\r\\n     <ion-button fill=\\\"clear\\\" color=\\\"dark\\\" routerLink=\\\"/login\\\" routerDirection=\\\"root\\\">\\r\\n         <span>Already have an account? <b>Sign In</b></span>\\r\\n     </ion-button>\\r\\n </div>\\r\\n</ion-content>\\r\\n\\r\\n\";"],"sourceRoot":"webpack:///"}