{"version":3,"sources":["./node_modules/rxjs/_esm2015/internal/observable/throwError.js","./src/app/auth/forgot-password/forgot-password-routing.module.ts","./src/app/auth/forgot-password/forgot-password.module.ts","./src/app/auth/forgot-password/forgot-password.page.ts","./src/services/emailer.service.ts","./src/app/auth/forgot-password/forgot-password.page.scss","./src/app/auth/forgot-password/forgot-password.page.html"],"names":[],"mappings":"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","file":"src_app_auth_forgot-password_forgot-password_module_ts.js","sourcesContent":["import { Observable } from '../Observable';\nexport function throwError(error, scheduler) {\n    if (!scheduler) {\n        return new Observable(subscriber => subscriber.error(error));\n    }\n    else {\n        return new Observable(subscriber => scheduler.schedule(dispatch, 0, { error, subscriber }));\n    }\n}\nfunction dispatch({ error, subscriber }) {\n    subscriber.error(error);\n}\n//# sourceMappingURL=throwError.js.map","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ForgotPasswordPage } from './forgot-password.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ForgotPasswordPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ForgotPasswordPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { ForgotPasswordPageRoutingModule } from './forgot-password-routing.module';\r\n\r\nimport { ForgotPasswordPage } from './forgot-password.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    IonicModule,\r\n    ForgotPasswordPageRoutingModule\r\n  ],\r\n  declarations: [ForgotPasswordPage]\r\n})\r\nexport class ForgotPasswordPageModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\nimport { FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\r\nimport { first } from 'rxjs/operators';\r\n\r\nimport { EmailerService } from '../../../services/emailer.service';\r\nimport { ForgotPasswordService } from '../../../services/forgot-password.service';\r\nimport { AlertService } from '../../../services/alert.service';\r\n\r\n@Component({\r\n  selector: 'app-forgot-password',\r\n  templateUrl: './forgot-password.page.html',\r\n  styleUrls: ['./forgot-password.page.scss'],\r\n})\r\nexport class ForgotPasswordPage implements OnInit {\r\n\r\n  private subscription_forgotPassword: Subscription = new Subscription();\r\n\r\n  forgotForm: FormGroup;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private emailerService: EmailerService,\r\n    private forgotPasswordService: ForgotPasswordService,\r\n    private alertService: AlertService\r\n  ) { \r\n    this.forgotForm = this.formBuilder.group({\r\n      email: ['', [Validators.required,Validators.minLength(1), Validators.email]]\r\n    })\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  forgotPassword (){\r\n    console.log(this.forgotForm.value.email);\r\n    this.subscription_forgotPassword.add(\r\n      this.forgotPasswordService.checkEmailExist(this.forgotForm.value.email)\r\n      .pipe(first())\r\n      .subscribe(\r\n        data => {\r\n          console.log(data['status']);\r\n          if(data['status'] == 200){\r\n\r\n            this.forgotPasswordService.forgotPassword(this.forgotForm.value.email)\r\n            .pipe(first())\r\n            .subscribe(\r\n              data => {\r\n                console.log(data['status']);\r\n                if(data['status'] == 200){\r\n                  var code = data['results'][0]['add_forgot_password_data']\r\n                  var email = this.forgotForm.value.email;\r\n                  // var email = 'heriiikoooo@gmail.com';\r\n                  var app_location = location.origin;\r\n                  var subject = 'Password Reset';\r\n                  var body = `\r\n                    <html>\r\n                      <head>\r\n                        <title>Password Reset\r\n                      </title>\r\n                      </head>\r\n                      <body>\r\n                      Reset your JPS account here: <a href=\"` + app_location +`/#/password-reset/`+ code + `\">jps forgot password</a>\r\n                      </body>\r\n                    </html>\r\n                    `;\r\n\r\n                  this.emailerService.sendEmail(email, subject, body)\r\n                    .pipe(first())\r\n                    .subscribe(\r\n                      data => {\r\n                        if(data['status'] == 'Success'){\r\n                          //save the details to db\r\n                          var email = this.forgotForm.value.forgot_password_email;\r\n                          this.alertService.simpleAlert('success', 'Email Confirmation Successfully', 'Please check your email');\r\n                          this.forgotForm.reset();\r\n                        }\r\n                        else{\r\n                          this.alertService.simpleAlert('warning', 'Something went wrong', 'please try again!');\r\n                        }\r\n                      },\r\n                      error => {\r\n                        this.alertService.simpleAlert('error', 'An error occured', 'Please try again!'); \r\n                      }\r\n                    );\r\n                }\r\n                else{\r\n                  this.alertService.simpleAlert('error', 'No registered email, please try again', '');\r\n                }\r\n              }\r\n            );\r\n            \r\n          }\r\n          else{\r\n            this.alertService.simpleAlert('error', 'No registered email, please try again', '');\r\n          }\r\n        },\r\n        error => {\r\n          this.alertService.simpleAlert('error', 'An error occured', 'Please try again!'); \r\n        }\r\n      )\r\n    );\r\n  }\r\n\r\n  get f() { return this.forgotForm.controls; }\r\n  get email() { return this.forgotForm.get('email'); }\r\n\r\n}\r\n","import { Injectable, SkipSelf } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nimport { GlobalVariable } from '../server'; \r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EmailerService {\r\n  private url = GlobalVariable.BASE_API_URL;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n\r\n  public sendEmail(email: string, subject: any, body: any) {\r\n    return this.http.post<any>(this.url.concat('api/emailer'),  {\r\n        to: email,\r\n        subject: subject,\r\n        body_text: body\r\n     })\r\n     .pipe(\r\n      catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  private handleError(err: HttpErrorResponse) {\r\n    let errorMessage = '';\r\n    if (err.error instanceof ErrorEvent) {\r\n      errorMessage = `An error occurred: ${err.error.message}`;\r\n    } else {\r\n      errorMessage = `Server returned code: ${err.status}, error message is: ${err.message}`;\r\n    }\r\n    console.error(errorMessage);\r\n    return throwError(errorMessage);\r\n  }\r\n}\r\n","export default \"#section1 {\\n  margin-top: 20px;\\n  text-align: center;\\n}\\n\\n.buttons {\\n  margin-top: 20px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZvcmdvdC1wYXNzd29yZC5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQkFBQTtFQUNBLGtCQUFBO0FBQ0Y7O0FBQ0E7RUFDRSxnQkFBQTtBQUVGIiwiZmlsZSI6ImZvcmdvdC1wYXNzd29yZC5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIjc2VjdGlvbjEge1xyXG4gIG1hcmdpbi10b3A6IDIwcHg7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcbi5idXR0b25zIHtcclxuICBtYXJnaW4tdG9wOiAyMHB4O1xyXG59XHJcbiJdfQ== */\";","export default \"<!-- Contents -->\\r\\n<ion-content id=\\\"signin\\\" fullscreen>\\r\\n\\r\\n  <!-- Any Image -->\\r\\n  <div id=\\\"section1\\\">\\r\\n      <img src=\\\"../../../assets/img/logo.png\\\" />\\r\\n  </div>\\r\\n  <form [formGroup]=\\\"forgotForm\\\" #form=\\\"ngForm\\\" class=\\\"ion-padding\\\" style=\\\"margin-top: -0.5 em;\\\">\\r\\n    <ion-grid>\\r\\n      <ion-text style=\\\"color: gray;\\\">Enter your email address</ion-text>\\r\\n        <ion-row color=\\\"primary\\\" class=\\\"ion-align-items-center ion-justify-content-center\\\">\\r\\n            <ion-col class=\\\"ion-align-self-center\\\" size-md=\\\"6\\\" size-lg=\\\"5\\\" size-xs=\\\"12\\\">\\r\\n                <!-- Email Input Box -->\\r\\n                <ion-item>\\r\\n                    <ion-label>\\r\\n                        <ion-icon md=\\\"mail\\\" ios=\\\"mail\\\" color=\\\"color1\\\"></ion-icon>\\r\\n                    </ion-label>\\r\\n                    <ion-input type=\\\"email\\\" placeholder=\\\"Email\\\" name=\\\"email\\\" formControlName=\\\"email\\\"></ion-input>\\r\\n                </ion-item>\\r\\n                <!-- <div *ngIf=\\\"!form.submitted && email.errors.requi || email.untouched\\\" style=\\\"text-align: justify; margin-top: 10px;\\\">\\r\\n                    <ion-text class=\\\"warning\\\" color=\\\"danger\\\">Email address required</ion-text>\\r\\n                  </div> -->\\r\\n                <div *ngIf=\\\"!form.submitted && email.errors || email.touched\\\" style=\\\"text-align: justify; margin-top: 10px;\\\">\\r\\n                    <ion-text class=\\\"warning\\\" color=\\\"danger\\\">Email must be a valid email address</ion-text>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"buttons\\\">\\r\\n                  <!-- Sign Button -->\\r\\n                  <ion-button expand=\\\"block\\\" color=\\\"warning\\\" [disabled]=\\\"!(email.valid) && (email.errors)\\\" (click)=\\\"forgotPassword(form)\\\">\\r\\n                      <ion-text class=\\\"primary\\\"><strong>Reset Password</strong></ion-text>\\r\\n                  </ion-button>\\r\\n              </div>\\r\\n\\r\\n            </ion-col>\\r\\n        </ion-row>\\r\\n    </ion-grid>\\r\\n</form>\\r\\n\\r\\n</ion-content>\\r\\n\";"],"sourceRoot":"webpack:///"}