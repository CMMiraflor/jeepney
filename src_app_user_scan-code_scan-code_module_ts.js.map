{"version":3,"sources":["./src/app/user/scan-code/scan-code-routing.module.ts","./src/app/user/scan-code/scan-code.module.ts","./src/app/user/scan-code/scan-code.page.ts","./src/app/user/scan-code/scan-code.page.scss","./src/app/user/scan-code/scan-code.page.html"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACc;AAEP;AAEhD,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,yDAAY;KACxB;CACF,CAAC;IAMW,yBAAyB,SAAzB,yBAAyB;CAAG;AAA5B,yBAAyB;IAJrC,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,yDAAY,CAAC;KACxB,CAAC;GACW,yBAAyB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;AChBG;AACM;AACF;AAEA;AACe;AACW;AAEvB;IAYnC,kBAAkB,SAAlB,kBAAkB;CAAG;AAArB,kBAAkB;IAV9B,uDAAQ,CAAC;QACR,OAAO,EAAE;YACP,yDAAY;YACZ,uDAAW;YACX,uDAAW;YACX,gFAAyB;YACzB,sEAAe;SAChB;QACD,YAAY,EAAE,CAAC,yDAAY,CAAC;KAC7B,CAAC;GACW,kBAAkB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;ACpBmB;IAOrC,YAAY,SAAZ,YAAY;IAKvB;QAJO,WAAM,GAAG,EAAE,CAAC;QACnB,gBAAW,GAAG,IAAI,CAAC;QAEX,UAAK,GAAG,gEAAgE;IAChE,CAAC;IAEjB,QAAQ;QACN,IAAI,CAAC,MAAM,GAAG,YAAY,CAAC,OAAO,CAAC,SAAS,CAAC;IAC/C,CAAC;IAED,eAAe,CAAC,IAAI;QAClB,IAAI,OAAO,GAAG,CAAC,IAAI,EAAE,OAAO,EAAE,EAAE;YAC9B,MAAM,WAAW,GAAI,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YACzE,MAAM,cAAc,GAAG,CAAC,IAAI,EAAE,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAC,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC;YAE/E,OAAO,OAAO;iBACb,KAAK,CAAC,SAAS,CAAC;iBAChB,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,QAAQ,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;iBAC/B,GAAG,CAAC,cAAc,CAAC;iBACnB,GAAG,CAAC,CAAC,QAAQ,EAAE,EAAE,CAAC,MAAM,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;iBAChD,IAAI,CAAC,EAAE,CAAC;QACX,CAAC;QAED,IAAI,GAAG,GAAG,OAAO,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;QACpC,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC;QACpB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACrB,CAAC;CAEF;;AA7BY,YAAY;IALxB,wDAAS,CAAC;QACT,QAAQ,EAAE,eAAe;QACzB,8EAAoC;;KAErC,CAAC;GACW,YAAY,CA6BxB;AA7BwB;;;;;;;;;;;;;;;;ACPzB,iEAAe,aAAa,qBAAqB,uBAAuB,GAAG,6CAA6C,mTAAmT,E;;;;;;;;;;;;;;;ACA3a,iEAAe,+WAA+W,E","file":"src_app_user_scan-code_scan-code_module_ts.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ScanCodePage } from './scan-code.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ScanCodePage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ScanCodePageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { NgxQRCodeModule } from '@techiediaries/ngx-qrcode';\r\nimport { ScanCodePageRoutingModule } from './scan-code-routing.module';\r\n\r\nimport { ScanCodePage } from './scan-code.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    ScanCodePageRoutingModule,\r\n    NgxQRCodeModule\r\n  ],\r\n  declarations: [ScanCodePage]\r\n})\r\nexport class ScanCodePageModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-scan-code',\r\n  templateUrl: './scan-code.page.html',\r\n  styleUrls: ['./scan-code.page.scss'],\r\n})\r\nexport class ScanCodePage implements OnInit {\r\n  public qrData = '';\r\n  scannedCode = null;\r\n  \r\n  private token = '1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    this.qrData = localStorage.getItem('qr-code')\r\n  }\r\n\r\n  decrypt_qr_data(data){\r\n    var decrypt = (salt, encoded) => {\r\n      const textToChars =  (text) => text.split('').map((c) => c.charCodeAt(0))\r\n      const appySaltToChar = (code) => textToChars(salt).reduce((a,b) => a ^ b, code)\r\n\r\n      return encoded\r\n      .match(/.{1,2}/g)\r\n      .map((hex) => parseInt(hex, 16))\r\n      .map(appySaltToChar)\r\n      .map((charCode) => String.fromCharCode(charCode))\r\n      .join(\"\")\r\n    }\r\n\r\n    var dec = decrypt(this.token, data);\r\n    dec = dec.split('/')\r\n    console.log(dec[0])\r\n  }\r\n\r\n}\r\n","export default \"#scan-code {\\n  margin-top: 2rem;\\n  text-align: center;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjYW4tY29kZS5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxnQkFBQTtFQUNBLGtCQUFBO0FBQ0oiLCJmaWxlIjoic2Nhbi1jb2RlLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIiNzY2FuLWNvZGV7XHJcbiAgICBtYXJnaW4tdG9wOiAycmVtO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59Il19 */\";","export default \"<ion-header [translucent]=\\\"true\\\">\\r\\n  <ion-toolbar>\\r\\n    <ion-title>\\r\\n      Scan Code\\r\\n    </ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content [fullscreen]=\\\"true\\\">\\r\\n  <div id=\\\"scan-code\\\">\\r\\n    <h5>Scan Code</h5>\\r\\n  </div>\\r\\n\\r\\n  <!-- <app-explore-container name=\\\"Scan Code\\\"></app-explore-container> -->\\r\\n</ion-content>\\r\\n\";"],"sourceRoot":"webpack:///"}