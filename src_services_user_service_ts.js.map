{"version":3,"sources":["./node_modules/rxjs/_esm2015/internal/observable/throwError.js","./src/services/user.service.ts"],"names":[],"mappings":"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","file":"src_services_user_service_ts.js","sourcesContent":["import { Observable } from '../Observable';\nexport function throwError(error, scheduler) {\n    if (!scheduler) {\n        return new Observable(subscriber => subscriber.error(error));\n    }\n    else {\n        return new Observable(subscriber => scheduler.schedule(dispatch, 0, { error, subscriber }));\n    }\n}\nfunction dispatch({ error, subscriber }) {\n    subscriber.error(error);\n}\n//# sourceMappingURL=throwError.js.map","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nimport { GlobalVariable } from '../server';\r\nimport { JsonPipe } from '@angular/common';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  private url = GlobalVariable.BASE_API_URL;\r\n  public user_account_type;\r\n  public authId;\r\n  \r\n  constructor(private http: HttpClient) { \r\n    \r\n  }\r\n\r\n  public getUserDetails(): Observable<any> {\r\n    var user = localStorage.getItem('loginSession');\r\n    var user_id = JSON.parse(user)['pk'];\r\n    this.authId = user_id;\r\n    console.log(user_id);\r\n    this.user_account_type = JSON.parse(user)['account_type'];\r\n    return this.http.get<any>(this.url.concat('api/user/get-user-details/'+user_id, ),  {\r\n      withCredentials: true\r\n    }).pipe(\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  public getUserById(id): Observable<any> {\r\n    return this.http.get<any>(this.url.concat('api/user/get-user-details/'+id, ),  {\r\n      withCredentials: true\r\n    }).pipe(\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  public getTransaction(): Observable<any> {\r\n    var user = localStorage.getItem('loginSession');\r\n    var user_id = JSON.parse(user)['pk'];\r\n    this.authId = user_id;\r\n    return this.http.get<any>(this.url.concat('api/user/get-transactions/'+user_id, ),  {\r\n      withCredentials: true\r\n    }).pipe(\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  public updateProfile(pk:number,logo:string, name:string, email:string, contact_number:string, address:string, driver_route:JSON): Observable<any>{\r\n    return this.http.put<any>(this.url.concat('api/user/update-profile'),  {\r\n      pk_id: pk,\r\n      logo: logo,\r\n      name: name,\r\n      email: email,\r\n      contact_number: contact_number,\r\n      address: address,\r\n      driver_route: driver_route\r\n   })\r\n   .pipe(\r\n    catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  private handleError(err: HttpErrorResponse) {\r\n    let errorMessage = '';\r\n    if (err.error instanceof ErrorEvent) {\r\n      errorMessage = `An error occurred: ${err.error.message}`;\r\n    } else {\r\n      errorMessage = `Server returned code: ${err.status}, error message is: ${err.message}`;\r\n    }\r\n    console.error(errorMessage);\r\n    return throwError(errorMessage);\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}